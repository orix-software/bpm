{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"first_step/","title":"First steps","text":""},{"location":"first_step/#first-start","title":"First start","text":"<p>bpm needs 'Oricutron' and 'cc65' in order to work properly.</p> <p>Theses binaries must be installed and cc65 (as ca65, ar65, ld65 must be in your PATH).</p>"},{"location":"first_step/#initialize-bpm-and-install-plugins","title":"Initialize bpm and install plugins","text":"<p>Each day \"bpm\" will check if a new version is available and will ask if you want to install this version</p> <pre><code>~$ bpm\n</code></pre> <p>it will install all plugins</p> <pre><code>~$ bpm plugins\nUse 'bpm plugins -h' for 'plugins' help\nmd2hlp: Build markdown into hlp file (text mode) [Installed]\norixsdk: Useful ca65 macro for Orix and reloc binary (Mandatory for Orix projects)  (Available versions : ['2023.3.0']) [Installed]\nasm_bin_tpl: Assembly binary template for Orix  (Available versions : ['2024.4']) [Installed]\nasm_rom_tpl: Assembly rom template for Orix  (Available versions : ['2024.4']) [Installed]\ngithub_action: Template for github action  (Available versions : ['2024.4']) [Installed]\ngeneratedoc: Tool to comment source code and generate markdown  (Available versions : ['2025.1']) [Installed]\n</code></pre>"},{"location":"first_step/#first-project","title":"First project","text":"<p>We create a binary from which will be loaded from /bin orix folder</p> <pre><code>~$ mkdir myprgm\n~$ bpm new\nThis project is :\n1) A binary program\n2) A library\n3) A rom\nanswer ?\n</code></pre> <p>Press 1</p> <pre><code>Init .gitignore\nInit bpm.tml\nInit src folder\nInit src/myprgm.c\nInit VERSION file\nAdd github action main.yml into project: y/N ?\n</code></pre> <p>Press N</p> <pre><code>initialized\n</code></pre> <pre><code>~$ cat src/myprgm.c\n#include &lt;stdio.h&gt;\nint main() {\n  printf(\"Hello word\");\n  return 0;\n}\n</code></pre> <p>Launch build</p> <pre><code>~$ bpm build\nCreating build/etc/bpm/myprgm/2025.1\nFormat 2 overhead:  304 304 1 2424 303\nGenerate file ...\n-Generate file version: 2\n-Truncate reloc table from 304 to 303 (-0.33%)\nBuilt : build/bin/myprogram\n</code></pre>"},{"location":"package/","title":"Package Layout","text":"<p>bpm uses conventions for file placement to make it easy to dive into a new Cargo package:</p> <pre><code>.\n\u251c\u2500\u2500 bpm.toml\n\u251c\u2500\u2500 build/\n\u251c\u2500\u2500 docs/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 myprogram.c\n</code></pre>"},{"location":"why/","title":"bpm : Build Package Manager","text":"<p>bpm is a linux command line tool for Orix development.</p> <p>This command manages various things as :</p> <ul> <li>Build code</li> <li>Run code</li> <li>Manage plugins for docs, template code</li> <li>Publish package into Orix repo</li> </ul>"},{"location":"commands/bpm_add/","title":"bpm add : Add a dependencies to current project","text":""},{"location":"commands/bpm_add/#synopsis","title":"SYNOPSIS","text":"<p>bpm add [options] bpm add package_to_install@version</p>"},{"location":"commands/bpm_add/#description","title":"DESCRIPTION","text":"<p>add a dependency to current project</p>"},{"location":"commands/bpm_add/#examples","title":"Examples","text":"<pre><code>bpm add twillib@2024.4\n</code></pre> <pre><code>bpm add --version\n</code></pre>"},{"location":"commands/bpm_add/#options","title":"OPTIONS","text":"<p>--help : display help</p>"},{"location":"commands/bpm_add/#exit-status","title":"EXIT STATUS","text":""},{"location":"commands/bpm_add/#see-also","title":"SEE ALSO","text":""},{"location":"commands/bpm_build/","title":"bpm-build \u2014 Compile the current package","text":""},{"location":"commands/bpm_build/#synopsis","title":"SYNOPSIS","text":"<p>bpm build [options]</p>"},{"location":"commands/bpm_build/#description","title":"DESCRIPTION","text":"<p>Compile local packages and all of their dependencies.</p>"},{"location":"commands/bpm_build/#options","title":"OPTIONS","text":""},{"location":"commands/bpm_build/#exit-status","title":"EXIT STATUS","text":""},{"location":"commands/bpm_build/#see-also","title":"SEE ALSO","text":""},{"location":"commands/bpm_config/","title":"bpm config","text":""},{"location":"commands/bpm_config/#bpm-config-set","title":"bpm config set","text":""},{"location":"commands/bpm_config/#bpm-config-add","title":"bpm config add","text":""},{"location":"commands/bpm_config/#bpm-config-add-project-binary","title":"bpm config add project binary","text":"<p>Add a \"curl\" binary into bin list to generate :</p> <p>\"bpm config add project binary curl tests/curl.c\"</p> <p>In that case, \"bpm run --bin curl\" will launch \"curl\" compiled from tests/curl.c</p>"},{"location":"commands/bpm_doc/","title":"bpm doc","text":""},{"location":"commands/bpm_doc/#generate-docs","title":"Generate docs","text":"<p>bpm doc</p> <p>All docs/{name}.md will be generated into .hlp (for man orix command) and inserted in \"build/usr/share/man/\". md2hlp.cfg into project will be modifyed in order to modify title of .hlp (part Heading1, property : Head)</p> <p>Generate md2hlp for man pages and docs from source code see asm.md and c.md</p>"},{"location":"commands/bpm_init/","title":"bpm init","text":"<p>Initialize project</p> <p>Init project</p> <p>Usage : bpm init</p>"},{"location":"commands/bpm_install/","title":"bpm install","text":"<p>Install all dependencies</p>"},{"location":"commands/bpm_list/","title":"bpm list","text":""},{"location":"commands/bpm_new/","title":"bpm new","text":""},{"location":"commands/bpm_package/","title":"bpm package","text":"<p>Build package</p> <p>\"src/include/*.s\" will be added into \"/usr/include\"</p> <p>\"src/include/*.inc\" will be added into \"/usr/include/asm\"</p> <p>In that case, if a binary calls theses include, \"bpm build\" will include theses paths automaticly</p>"},{"location":"commands/bpm_plugins/","title":"bpm plugins - Manage plugins","text":"<p>A plugin is a tool in order to manage some part of the development.</p>"},{"location":"commands/bpm_plugins/#bpm-plugins","title":"bpm plugins","text":"<p>Usage : bpm plugins</p>"},{"location":"commands/bpm_plugins/#bpm-install","title":"bpm install","text":"<p>Usage : bpm plugins install [plugin_name]</p>"},{"location":"commands/bpm_plugins/#displays-installed-plugins","title":"Displays installed plugins","text":"<pre><code>~$ bpm plugins\nUse 'bpm plugins -h' for 'plugins' help\nmd2hlp: Build markdown into hlp file (text mode) [Installed]\norixsdk: Useful ca65 macro for Orix and reloc binary (Mandatory for Orix projects)  (Available versions : ['2023.3.0']) [Installed]\nasm_bin_tpl: Assembly binary template for Orix  (Available versions : ['alpha']) [Installed]\nasm_rom_tpl: Assembly rom template for Orix  (Available versions : ['2024.4', 'alpha']) [Installed]\ngithub_action: Template for github action  (Available versions : ['2024.4']) [Installed]\ngeneratedoc: Tool to comment source code and generate markdown  (Available versions : ['2025.1', '2024.4']) [Installed]\n</code></pre>"},{"location":"commands/bpm_publish/","title":"bpm publish - publish package","text":""},{"location":"commands/bpm_publish/#bpm-publish-official","title":"bpm publish --official","text":"<p>Publish package into official repo (depending of the version)</p>"},{"location":"commands/bpm_remove/","title":"bpm remove","text":"<p>Remove a dependency from the project.</p> <p>Example :</p> <p>bpm remove twillib</p>"},{"location":"commands/bpm_run/","title":"bpm run","text":"<p>Build an run program.</p> <p>The Oricutron path must be set in main config file or local config file (manifest).</p> <p>add a oricutron path for main config :</p> <pre><code>bpm config set main oricutron_path /mnt/c/Users/mypath/oric/oricutron_plugins/oricutron\n</code></pre> <p>for current manifest :</p> <pre><code>bpm config set project oricutron_path /mnt/c/Users/mypath/oric/oricutron_plugins/oricutron\n</code></pre>"},{"location":"commands/bpm_run/#behavior-for-bpm-run","title":"Behavior for 'bpm run'","text":"<p>oricutron_path is missing, it will read oricutron_path from main config.</p>"},{"location":"commands/bpm_run/#behavior-in-oricutron-sdcard-folder","title":"Behavior in oricutron sdcard/ folder","text":"<p>If AUTOBOOT is already in etc/autoboot. bpm saves it and restore it.</p> <p>If there is no autoboot before \"bpm run starts\", sur autoboot from bpm will be removed.</p> <p>For autoexecute AUTOBOOT, 'submit' binary must bin in sdcard/bin/</p> <p>Orix kernel must be greater than 2023.3</p> <p>Specify command to launch : bpm run --bin hello</p> <p>To specify args :</p> <p>bpm run --bin \"hello -y\"</p>"},{"location":"commands/bpm_search/","title":"bpm search","text":""},{"location":"commands/bpm_unpublish/","title":"bpm unpublish","text":""},{"location":"commands/bpm_unpublish/#bpm-unpublish-official","title":"bpm unpublish --official","text":"<p>Unpublish package from official repo (depending of the version described into bpm.tml)</p>"},{"location":"commands/bpm_update/","title":"bpm update","text":"<p>Uninstall and reinstall all dependencies</p>"}]}